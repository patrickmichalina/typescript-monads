{
  "name": "typescript-monads",
  "version": "0.0.0-development",
  "description": "Write cleaner TypeScript",
  "main": "index.js",
  "author": "Patrick Michalina <patrickmichalina@mac.com> (https://patrickmichalina.com)",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/patrickmichalina/typescript-monads"
  },
  "keywords": [
    "typescript",
    "javascript",
    "monads",
    "maybe",
    "result",
    "either",
    "functional"
  ],
  "scripts": {
    "test": "jest",
    "test.watch": "jest --watch",
    "dist": "ts-node ./scripts/publish-prep.ts",
    "lint": "tslint --project tsconfig.json --config tslint.json",
    "build": "tsc -p tsconfig.build.json && npm run rollup && terser dist/index.js -o dist/index.min.js --source-map",
    "rollup": "rollup dist/index.js -o dist/index.js --format umd --name \"typescriptMonads\" -m"
  },
  "release": {
    "pkgRoot": "dist"
  },
  "devDependencies": {
    "@types/fs-extra": "^7.0.0",
    "@types/jest": "^24.0.14",
    "@types/node": "^12.0.8",
    "codecov": "^3.5.0",
    "fs-extra": "^8.0.1",
    "istanbul": "^0.4.5",
    "jest": "24.8.0",
    "jest-junit": "^6.4.0",
    "rollup": "^1.15.3",
    "semantic-release": "^15.13.16",
    "terser": "^4.0.0",
    "ts-jest": "^24.0.2",
    "ts-node": "^8.2.0",
    "tslint": "^5.17.0",
    "tslint-immutable": "^6.0.0",
    "typescript": "^3.5.1"
  },
  "jest": {
    "testURL": "http://localhost",
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "coverageReporters": [
      "lcov"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    },
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/"
    ],
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(ts?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  }
}
